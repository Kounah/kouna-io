@if(context && context.user)
<ul class="dropdown-content" id="nav-notification-invites-dropdown">
</ul>
@endif

<ul class="sidenav" id="mobile-nav">
  @if(items)
    <li class="no-padding">
      <ul class="collapsible collapsible-accordion">
        @each(item in filterArray(items, 'this.subs != undefined'))
        <li>
          <a class="collapsible-header waves-effect">
            @!component('component.icon', {type: 'material', key: 'expand_more', position: 'right'})
            {{ item.name }}</a>
          <div class="collapsible-body">
            <ul>
              @each(sub in item.subs)
              <li>
                @!component('component.nav.item', sub)
              </li>
              @endeach
            </ul>
          </div>
        </li>
        @endeach
      </ul>
    </li>
    @each(item in filterArray(items, 'this.subs == undefined'))
    <li class="bold">
      <a href="{{ item.href }}">
        @if(item.icon)
        @!component('component.icon', item.icon)
        @endif
        @!component('component.icon', {type: 'material', key: 'send', position: 'right'})
        {{ item.name }}
      </a>
    </li>
    @endeach
  @else
    <span class="red">Nothing to show here.</span>
  @endif
</ul>

<nav>
  <div class="nav-wrapper">
    <ul>
      <li><a data-target="mobile-nav" class="sidenav-trigger"><i class="material-icons">menu</i></a></li>
    </ul>
    <ul class="hide-on-med-and-down">
      @each(item in items)
      <li>
        @!component('component.nav.item', item)
      </li>
      @endeach
    </ul>
    <ul class="right">
      @if(context && context.user)
        <li><a class="dropdown-trigger" data-target="nav-notification-dropdown">
          <i class="material-icons">notifications</i>
        </a></li>
        <ul class="dropdown-content" id="nav-notification-dropdown">
          <li>
            <a data-target="nav-notification-invites-dropdown">
              <i class="material-icons left">email</i>
              Invites
              <span class="new badge hide">0</span>
            </a>
            <script type="text/javascript">
              (function($, M) {
                var cs = document.currentScript;
                function initInvites() {
                  var p = cs.parentElement;
                  var ddt = p.querySelector('a[data-target]');
                  var ddc = document.getElementById(ddt.getAttribute('data-target'))
                  var badge = ddt.querySelector('.badge')

                  M.Dropdown.init(ddt, {
                    hover: true,
                    alignment: 'right',
                    coverTrigger: false,
                    constrainWidth: false,
                    container: document.body
                  })

                  function buildInvite(inv) {
                    var $wrapper = $(document.createElement('li'));
                    $wrapper
                    .append(
                      $(document.createElement('div'))
                      .addClass('card z-depth-0')
                      .append(
                        $(document.createElement('div'))
                        .addClass('card-content')
                        .append(
                          $(document.createElement('div'))
                          .addClass('center')
                          .append(
                            $(document.createElement('p'))
                            .append(
                              $(document.createElement('span'))
                              .attr('data-id', inv.from)
                              .asyncUser()
                            ).append('<span> has invited you to</span>')
                          )
                        ).append(
                          $(document.createElement('div'))
                          .addClass('center')
                          .append(
                            $(document.createElement('button'))
                            .addClass('btn waves-effect waves-light')
                            .addClass('green lighten-2 green-text text-darken-4')
                            // .text('Accept')
                            .append('<i class="material-icons">check</i>')
                            .on('click', function() {
                              $.ajax({
                                method: 'POST',
                                url: '/invite/' + inv._id + '/accept',
                                dataType: 'json'
                              }).done(function(d) {
                                if(d.success != undefined) {
                                  var w = $wrapper.get().shift();
                                  w.parentElement.removeChild(w);
                                  badge.innerText = parseInt(badge.innerText) - 1;

                                  if(d.success == true) {
                                    M.toast({
                                      html: md.render(d.message),
                                      margin: 0,
                                      classes: 'green lighten-2 green-text text-darken-4'
                                    })
                                  } else {
                                    M.toast({
                                      html: md.render(d.message),
                                      margin: 0,
                                      classes: 'yellow lighten-2 yellow-text text-darken-4'
                                    })
                                  }
                                }
                              }).fail(function(...err) {
                                console.error(err);
                                M.toast({
                                  html: 'failed to accept the invite',
                                  classes: 'red lighten-2 red-text text-darken-4'
                                })
                              })
                            })
                            ).append(
                            '<span> </span>'
                            )
                            .append(
                            $(document.createElement('button'))
                            .addClass('btn waves-effect waves-light')
                            .addClass('red lighten-2 red-text text-darken-4')
                            // .text('Decline')
                            .append('<i class="material-icons">clear</i>')
                            .on('click', function() {
                              $.ajax({
                                method: 'POST',
                                url: '/invite/' + inv._id + '/decline',
                                dataType: 'json'
                              }).done(function(d) {
                                if(d.success != undefined) {
                                  var w = $wrapper.get().shift();
                                  w.parentElement.removeChild(w);
                                  badge.innerText = parseInt(badge.innerText) - 1;

                                  if(d.success == true) {
                                    M.toast({
                                      html: md.render(d.message),
                                      margin: 0,
                                      classes: 'green lighten-2 green-text text-darken-4'
                                    })
                                  } else {
                                    M.toast({
                                      html: md.render(d.message),
                                      margin: 0,
                                      classes: 'yellow lighten-2 yellow-text text-darken-4'
                                    })
                                  }
                                }
                              }).fail(function(...err) {
                                console.error(err);
                                M.toast({
                                  html: 'failed to decline the invite',
                                  classes: 'red lighten-2 red-text text-darken-4'
                                })
                              })
                            })
                          )
                        )
                      )
                    );
                    return $wrapper;
                  }

                  var lastScan;
                  function checkInvites() {

                    if(window.notif == undefined) window.notif = {};
                    if(window.notif.inv == undefined) window.notif.inv = [];

                    if(window.notif.inv.length <= 0) {
                      $.ajax({
                        method: 'GET',
                        url: '/invites',
                        dataType: 'json'
                      }).done(function(d) {
                        if(d.success == true) {
                          window.notif.inv = d.result;
                          badge.classList.remove('hide');
                          badge.classList.remove('new');
                          badge.innerText = window.notif.inv.length;
                          console.log(d.result);
                          d.result.forEach(function(inv) {
                            $(ddc).append(buildInvite(inv));
                          })
                        }
                      }).fail(function() {
                        console.error('failed to get invites');
                      })
                    } else {
                      $.ajax({
                        method: 'GET',
                        url: '/invites',
                        dataType: 'json',
                        data: {
                          after: lastScan
                        }
                      }).done(function(d) {
                        if(d.success == true) {
                          if(d.result.length > 0) {
                            M.toast({
                              html: 'you have ' + d.result.length + ' new invites'
                            })

                            window.notif.inv = window.notif.concat(d.result);
                            console.log(d.result);
                            d.result.forEach(function(inv) {
                              $(ddc).append(buildInvite(inv));
                            })
                          }
                        }
                      }).fail(function() {
                        console.error('failed to get invites');
                      })
                    }

                    lastScan = new Date() + '';
                    lastScan = lastScan.split(/\\ \\([a-z|A-Z|0-9|\\ ]*?\\)/).join('');
                  }

                  checkInvites();
                  setInterval(checkInvites, 5000);

                  p.removeChild(cs);
                }

                $(document).ready(function() {
                  initInvites();
                })
              })(jQuery, M)

            </script>
          </li>
        </ul>

        <li><a class="dropdown-trigger" data-target="nav-account-dropdown">
          @!component('component.icon', { type: 'material', key: 'account_circle', position: 'left' })
          @if(context.user.local.name)
          {{ context.user.local.name }}
          @else
            @if(context.user.local.email)
            {{ context.user.local.email }}
            @else
            {{ context.user._id }}
            @endif
          @endif
        </a></li>
        <ul class="dropdown-content" id="nav-account-dropdown">
          <li><a href="/account/profile">
            @!component('component.icon', {type: 'material', key: 'face'})
            Profile
          </a></li>
          <li><a href="/account/settings">
            @!component('component.icon', {type: 'material', key: 'settings'})
            Settings
          </a></li>
          @if(context.user.admin)
          <li class="divider"></li>
          <li><a href="/admin">
            @!component('component.icon', {type: 'material', key: 'code'})
            Admin Tools
          </a></li>
          @endif
          <li class="divider"></li>
          <li><a href="/logout">
            @!component('component.icon', {type: 'material', key: 'power_settings_new'})
            Logout
          </a></li>
        </ul>
      @else
        <li>
          <a class="modal-trigger" data-target="nav-login">
            @!component('component.icon', {type: 'material', key: 'input', position: 'left'})
            Login
          </a>
          <form method="POST" action="/login">
            <div class="hide">
              <input type="text" name="redirUrl" value="{{{context.path}}}">
            </div>
            <div class="modal" id="nav-login">
              <div class="modal-content">
                <div class="row">
                  <div class="col s12 m6 offset-m3">
                    <h4>Login</h4>
                    <div class="input-field center">
                      <input type="text" name="email" value="" required>
                      <label for="email">Email</label>
                    </div>
                    <div class="input-field center">
                      <input type="password" name="password" value="" required>
                      <label for="password">Password</label>
                    </div>
                    <div class="input-field center">
                      <input class="btn" type="submit" name="" value="Login">
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </form>
        </li>
      @endif
    </ul>
  </div>
</nav>
